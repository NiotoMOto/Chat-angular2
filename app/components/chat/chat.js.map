{"version":3,"sources":["components/chat/chat.ts"],"names":["Chat","Chat.constructor","Chat.sendMessage","Chat.onSubmit"],"mappings":"AAAA,uCAAuC;;;;;;;;;;;;AAEvC,yBAA2C,mBAAmB,CAAC,CAAA;AAC/D,yBAAkE,mBAAmB,CAAC,CAAA;AACtF,yBAAyB,mBAAmB,CAAC,CAAA;AAC7C,uBAAmB,cAAc,CAAC,CAAA;AAElC;IAkBEA,cAAYA,EAAeA;QAlB7BC,iBAgDCA;QA7BGA,IAAIA,CAACA,QAAQA,GAAGA,EAAEA,CAACA;QACnBA,IAAIA,CAACA,MAAMA,GAAGA,EAAEA,CAAEA,uBAAuBA,CAAEA,CAACA;QAC5CA,IAAIA,CAACA,MAAMA,CAACA,EAAEA,CAACA,aAAaA,EAAEA,UAACA,CAACA;YAC9BA,KAAIA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;YACtBA,OAAOA,CAACA,GAAGA,CAACA,UAAUA,EAAEA,KAAIA,CAACA,QAAQA,CAACA,CAACA;QACzCA,CAACA,CAACA,CAACA;QACHA,IAAIA,CAACA,OAAOA,GAAGA,EAAEA,CAACA,KAAKA,CAACA;YACtBA,OAAOA,EAAEA,CAACA,EAAEA,EAAEA,qBAAUA,CAACA,QAAQA,CAACA;SACnCA,CAACA,CAACA;QACHA,IAAIA,CAACA,QAAQA,GAAGA,EAAEA,CAACA,KAAKA,CAACA;YACvBA,OAAOA,EAAEA,CAACA,EAAEA,EAAEA,qBAAUA,CAACA,QAAQA,CAACA;SACnCA,CAACA,CAACA;QACHA,IAAIA,CAACA,OAAOA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,QAAQA,CAACA,OAAOA,CAACA;QAC7CA,IAAIA,CAACA,OAAOA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,QAAQA,CAACA,OAAOA,CAACA;IAChDA,CAACA;IAEDD,0BAAWA,GAAXA;QACEE,OAAOA,CAACA,GAAGA,CAACA,aAAaA,CAACA,CAACA;QAC3BA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,CAACA,KAAKA,CAACA,CAACA,CAACA;YACxBA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,SAASA,EAAEA,IAAIA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;QAClDA,CAACA;IAEHA,CAACA;IAEDF,uBAAQA,GAARA;QACEG,EAAEA,CAACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA,CAACA;YACvBA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,aAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;QAC3CA,CAACA;IACHA,CAACA;IA/CHH;QAACA,oBAASA,CAACA;YACTA,QAAQA,EAAEA,MAAMA;YAChBA,YAAYA,EAAEA,CAACA,sBAAWA,CAACA;SAC5BA,CAACA;QACDA,eAAIA,CAACA;YACJA,WAAWA,EAAEA,iCAAiCA;YAC9CA,UAAUA,EAAEA,CAACA,gBAAKA,EAAEA,eAAIA,EAAEA,0BAAeA,CAACA;SAC3CA,CAACA;;aAyCDA;IAADA,WAACA;AAADA,CAhDA,AAgDCA,IAAA;AApCY,YAAI,OAoChB,CAAA","file":"components/chat/chat.js","sourcesContent":["/// <reference path=\"../../models.ts\"/>\r\n\r\nimport {Component, View, NgIf, NgFor} from 'angular2/angular2';\r\nimport {FORM_DIRECTIVES, FormBuilder, ControlGroup, Control} from 'angular2/angular2';\r\nimport {Validators} from 'angular2/angular2';\r\nimport {User} from '../../models';\r\n\r\n@Component({\r\n  selector: 'chat',\r\n  viewBindings: [FormBuilder]\r\n})\r\n@View({\r\n  templateUrl: './app/components/chat/chat.html',\r\n  directives: [NgFor, NgIf, FORM_DIRECTIVES]\r\n})\r\n\r\n// const chatIo = io( 'http://localhost:4000' );\r\n// console.log(chatIo);\r\n\r\nexport class Chat {\r\n  user: User;\r\n  logForm: ControlGroup;\r\n  newUser : string;\r\n  chatIo: Socket ;\r\n  messages: Array;\r\n  constructor(fb: FormBuilder){\r\n    this.messages = [];\r\n    this.chatIo = io( 'http://localhost:4000' );\r\n    this.chatIo.on('all:message', (m) => {\r\n      this.messages.push(m);\r\n      console.log('messages', this.messages);\r\n    });\r\n    this.logForm = fb.group({\r\n      newUser: ['', Validators.required]\r\n    });\r\n    this.sendForm = fb.group({\r\n      message: ['', Validators.required]\r\n    });\r\n    this.newUser = this.logForm.controls.newUser;\r\n    this.message = this.sendForm.controls.message;\r\n  }\r\n\r\n  sendMessage() {\r\n    console.log('sendMessage');\r\n    if (this.sendForm.valid) {\r\n      this.chatIo.emit('message', this.message.value);\r\n    }\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.logForm.valid) {\r\n      this.user = new User(this.newUser.value);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}